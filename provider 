import React, { createContext, useContext, useState, ReactNode } from 'react';

// Define the types for the context value
interface AppContextType {
  data: boolean;
  setData: (value: boolean) => void;
}

// Create the context with default undefined
const AppContext = createContext<AppContextType | undefined>(undefined);

// Create a provider component
const AppProvider = ({ children }: { children: ReactNode }) => {
  const [data, setData] = useState<boolean>(false); // Initialize the state with a boolean

  return (
    <AppContext.Provider value={{ data, setData }}>
      {children}
    </AppContext.Provider>
  );
};

// Custom hook to use the AppContext
const useAppContext = () => {
  const context = useContext(AppContext);
  if (context === undefined) {
    throw new Error('useAppContext must be used within an AppProvider');
  }
  return context;
};

export { AppProvider, useAppContext };